{"mappings":"AAAA,MAAMA,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAChCG,EAAOJ,SAASC,cAAc,SAEpCF,EAAMM,iBAAiB,SAUvB,SAAoBC,GAClBC,EAAiBC,KAAKC,MAAMH,EAAEI,OAAOC,M,IAVvCT,EAAKG,iBAAiB,SAatB,SAAmBC,GACjBM,EAAgBJ,KAAKC,MAAMH,EAAEI,OAAOC,M,IAbtCR,EAAOE,iBAAiB,QAASQ,GAEjC,IAEIC,EAAkB,EAClBF,EAAgB,EAChBL,EAAiB,EAUrB,SAASM,EAAYP,GACnBQ,EAAkBN,KAAKC,MAAMH,EAAEI,OAAOC,M,CAqBxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBb,KAAKc,SAAW,GACtCC,YAAW,KACLF,EACFF,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE5BA,EAAM,G,CA3Bbb,EAAKC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEmB,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAiBY,GAAK,EAAG,CAG3CX,EAFeW,EAAI,EACPnB,EAAiBK,EAAgBc,GAE1CC,MAAK,EAACX,SAAEA,EAAUQ,MAAAI,MACjBC,QAAQC,IAAI,uBAAqBd,QAAiBY,MAAU,IAE7DG,OAAM,EAACf,SAAEA,EAAUQ,MAAAQ,MAClBH,QAAQC,IAAI,sBAAoBd,QAAegB,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\ndelay.addEventListener('input', delayValue);\nstep.addEventListener('input', stepValue);\namount.addEventListener('input', amountValue);\n\nlet intervalId = amountValue;\n\nlet amountTextValue = 0;\nlet stepTextValue = 0;\nlet delayTextValue = 0;\n\nfunction delayValue(e) {\n  delayTextValue = Math.floor(e.target.value);\n}\n\nfunction stepValue(e) {\n  stepTextValue = Math.floor(e.target.value);\n}\n\nfunction amountValue(e) {\n  amountTextValue = Math.floor(e.target.value);\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  for (let i = 0; i < amountTextValue; i += 1) {\n    let position = i + 1;\n    let delay = delayTextValue + stepTextValue * i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","addEventListener","e","$47d4ff9957288465$var$delayTextValue","Math","floor","target","value","$47d4ff9957288465$var$stepTextValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$amountTextValue","$47d4ff9957288465$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","random","setTimeout","delay","preventDefault","i","then","delay2","console","log","catch","delay3"],"version":3,"file":"03-promises.f7f36af4.js.map"}