{"mappings":"YAAA,IAAMA,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAChCG,EAAOJ,SAASC,cAAc,SAEpCF,EAAMM,iBAAiB,SAUvB,SAAoBC,GAClBC,EAAiBC,KAAKC,MAAMH,EAAEI,OAAOC,M,IAVvCT,EAAKG,iBAAiB,SAatB,SAAmBC,GACjBM,EAAgBJ,KAAKC,MAAMH,EAAEI,OAAOC,M,IAbtCR,EAAOE,iBAAiB,QAASQ,GAEjC,IAEIC,EAAkB,EAClBF,EAAgB,EAChBL,EAAiB,EAUrB,SAASM,EAAYP,GACnBQ,EAAkBN,KAAKC,MAAMH,EAAEI,OAAOC,M,CAqBxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBb,KAAKc,SAAW,GACtCC,YAAW,WACLF,EACFF,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IA3BPb,EAAKC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEmB,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAiBY,GAAK,EAAG,CAG3CX,EAFeW,EAAI,EACPnB,EAAiBK,EAAgBc,GAE1CC,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUa,EAAKD,EAALJ,MACjBM,QAAQC,IAAI,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUkB,EAAKN,EAALJ,MAClBM,QAAQC,IAAI,sBAAqCC,OAAfhB,EAAS,QAAYgB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\ndelay.addEventListener('input', delayValue);\nstep.addEventListener('input', stepValue);\namount.addEventListener('input', amountValue);\n\nlet intervalId = amountValue;\n\nlet amountTextValue = 0;\nlet stepTextValue = 0;\nlet delayTextValue = 0;\n\nfunction delayValue(e) {\n  delayTextValue = Math.floor(e.target.value);\n}\n\nfunction stepValue(e) {\n  stepTextValue = Math.floor(e.target.value);\n}\n\nfunction amountValue(e) {\n  amountTextValue = Math.floor(e.target.value);\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  for (let i = 0; i < amountTextValue; i += 1) {\n    let position = i + 1;\n    let delay = delayTextValue + stepTextValue * i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","addEventListener","e","$ce04d3a99e08e73b$var$delayTextValue","Math","floor","target","value","$ce04d3a99e08e73b$var$stepTextValue","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$amountTextValue","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","random","setTimeout","delay","preventDefault","i","then","param","delay2","console","log","concat","catch","delay3"],"version":3,"file":"03-promises.4dc44084.js.map"}